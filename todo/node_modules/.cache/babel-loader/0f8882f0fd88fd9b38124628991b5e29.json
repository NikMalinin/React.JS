{"ast":null,"code":"var _jsxFileName = \"D:\\\\html\\\\React\\\\2\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\nimport ItemAddForm from '../item-add-form/item-add-form';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Write a list')],\n      term: '',\n      filter: 'all'\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const before = todoData.slice(0, idx);\n        const after = todoData.slice(idx + 1);\n        const newArray = [...before, ...after];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n\n      case 'active':\n        return items.filter(item => !item.done);\n\n      case 'done':\n        return items.filter(item => item.done);\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      term,\n      filter\n    } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        toDo: todoCount,\n        done: doneCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n          onSearchChange: this.onSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ItemStatusFilter, {\n          filter: filter,\n          onFilterChange: this.onFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: visibleItems,\n        onDeleted: this.deleteItem,\n        onToggleDone: this.onToggleDone,\n        onToggleImportant: this.onToggleImportant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ItemAddForm, {\n        onItemAdded: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/html/React/2/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","App","maxId","state","todoData","createTodoItem","term","filter","deleteItem","id","setState","idx","findIndex","el","before","slice","after","newArray","addItem","text","newItem","newArr","onToggleDone","toggleProperty","onToggleImportant","onSearchChange","onFilterChange","label","important","done","arr","propName","oldItem","search","items","length","item","toLowerCase","indexOf","render","visibleItems","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Write a list'),\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const before = todoData.slice(0, idx);\r\n            const after = todoData.slice(idx + 1);\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className='todo-app' >\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className='top-panel d-flex'>\r\n                    <SearchPanel onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange} />\r\n                </div>\r\n                <TodoList todos={visibleItems} onDeleted={this.deleteItem} onToggleDone={this.onToggleDone} onToggleImportant={this.onToggleImportant} />\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}